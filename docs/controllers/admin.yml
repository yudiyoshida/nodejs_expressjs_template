paths:
  /adm/admins/permissions:
    get:
      summary: 'Rota utilizada para listar as permissões'
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionSchema'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

  /adm/admins:
    get:
      summary: 'Rota utilizada para listar todos os usuários admins'
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/AccountStatusParameter'
        - $ref: '#/components/parameters/PageParameter'
        - $ref: '#/components/parameters/LimitParameter'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/AdminSchema'
                  - $ref: '#/components/schemas/PaginationSchema'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'

    post:
      summary: 'Rota utilizada para cadastrar um novo usuário admin'
      description: >
        ## - Ao criar a conta, uma senha aleatória para acessar o portal gerencial chegará por email.
        
        ## - "permissions" é um array de ids. Os ids das permissões podem ser obtidos na rota GET /adm/admins/permissions.
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/AdminSchema"
                - $ref: "#/components/schemas/PermissionIdArraySchema"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/AdminSchema"
                  - $ref: "#/components/schemas/PermissionArraySchema"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "500":
          $ref: "#/components/responses/500"

  /adm/admins/{id}:
    parameters:
      - $ref: '#/components/parameters/IdParameter'
    get:
      summary: 'Rota utilizada para exibir um usuário admin'
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AdminSchema'
                  - $ref: '#/components/schemas/PermissionArraySchema'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

    put:
      summary: 'Rota utilizada para editar um usuário admin'
      description: >
        ## - Não tem necessidade de enviar todos os campos novamente. Só precisa enviar aqueles que deseja editar.

        ## - "permissions" é um array de ids. Os ids das permissões podem ser obtidos na rota GET /adm/admins/permissions.
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/AdminSchema"
                - $ref: "#/components/schemas/PermissionIdArraySchema"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/AdminSchema"
                  - $ref: "#/components/schemas/PermissionArraySchema"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "409":
          $ref: "#/components/responses/409"
        "500":
          $ref: "#/components/responses/500"

    delete:
      summary: 'Rota utilizada para deletar um usuário admin'
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  /adm/admins/{id}/update-status:
    parameters:
      - $ref: '#/components/parameters/IdParameter'
    patch:
      summary: 'Rota utilizada para ativar/inativar um usuário admin'
      tags:
        - Gerencial - Colaboradores
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusSchema'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AdminSchema'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
