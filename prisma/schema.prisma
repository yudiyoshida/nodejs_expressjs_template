// This is your Prisma schema file, learn more about it in the docs: https://pris.ly/d/prisma-schema
// Attributes: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#attributes
// Attributes functions: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#attribute-functions
// Native type MySQL: https://www.prisma.io/docs/concepts/database-connectors/mysql#native-type-mappings
// Relations: https://www.prisma.io/docs/concepts/components/prisma-schema/relations
// Scalar types: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#model-field-scalar-types

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Security {
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(512)
  code          String?   @db.VarChar(32)
  codeExpiresIn DateTime? @db.DateTime(0)
  validated     Boolean   @default(false)
}

model Permission {
  id     Int             @id @default(autoincrement())
  title  AdminPermission @unique
  admins Admin[]
}

model Profile {
  id            Int           @id @default(autoincrement())
  role          ProfileRole
  email         String?       @unique @db.VarChar(512)
  phone         String?       @unique @db.VarChar(32)
  password      String        @db.Text
  status        ProfileStatus
  code          String?       @db.VarChar(32)
  codeExpiresIn DateTime?     @db.DateTime(0)
  admin         Admin?        @relation(name: "adminProfile")
}

model Admin {
  profile     Profile      @relation(name: "adminProfile", fields: [profileId], references: [id])
  profileId   Int
  name        String       @db.VarChar(512)
  imageKey    String?      @db.Text
  imageUrl    String?      @db.Text
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]

  @@id([profileId])
}

model Address {
  id           Int      @id @default(autoincrement())
  nickname     String?  @db.VarChar(512)
  zipcode      String   @db.VarChar(512)
  street       String   @db.VarChar(512)
  number       String   @db.VarChar(512)
  complement   String?  @db.VarChar(512)
  reference    String?  @db.VarChar(512)
  neighborhood String   @db.VarChar(512)
  city         String   @db.VarChar(512)
  state        String   @db.VarChar(512)
  lat          String?  @db.VarChar(512)
  lng          String?  @db.VarChar(512)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Faq {
  id        Int      @id @default(autoincrement())
  question  String   @db.Text
  answer    String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Text {
  id        Int      @id @default(autoincrement())
  type      TextType @unique
  content   String   @db.LongText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProfileRole {
  admin
  user
}

enum ProfileStatus {
  ativo
  inativo
  pendente
}

enum AdminPermission {
  usuarios
  configuracoes
}

enum TextType {
  about
  privacy
  terms
}
